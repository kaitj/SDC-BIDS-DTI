name: Build, test

on:
  schedule:
    - cron: "0 2 * * 1,3,5"  # 02:00 UTC every Mon,Wed,Fri

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout GitHub repository
      uses: actions/checkout@v2

    # Run with multiple Python versions.
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Use a cache for the pip install to avoid reinstalling every time this is run.
    - name: Cache pip install
      uses: actions/cache@v2
      id: cache
      with:
        path: .cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

    # Install all requirements to run these tests.
    - name: Install requirements
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip3 install virtualenv
        virtualenv ~/sdc_bids_dmri
        pip install -r requirements.txt
        pip install pytest nbval
        export PYTHONPATH=$PYTHONPATH:`realpath ${{ github.workspace }}`

    # Install additional dependencies
    - name: Install additional dependencies
      run: |
        wget https://fsl.fmrib.ox.ac.uk/fsldownloads/fslinstaller.py || echo "Failed to download FSL installer";
        if [[ -f fslinstaller.py ]]; then
          sudo python fslinstaller.py -d /usr/local/fsl --quiet || echo "Failed to install FSL";
        fi

    # Download the necessary data
    - name: Download data
      run: |
        pushd `pwd`
        cd ${{ github.workspace }}/data
        osf -p cmq8a fetch ds000221_subject/ds000221_sub-010006.zip
        unzip ds000221_sub-010006.zip 
        rm ds000221_sub-010006.zip
        popd 
        
    # Run the actual tests of all the Python Notebooks.
    - name: Test Notebooks
      run: |
        source ~/sdc_bids_dmri/bin/activate
        pytest --nbval-lax -v code/introduction/solutions/introduction_solutions.ipynb
        pytest --nbval-lax -v code/diffusion_tensor_imaging/solutions/diffusion_tensor_imaging_solutions.ipynb
        pytest --nbval-lax -v code/constrained_spherical_deconvolution/solutions/constrained_spherical_deconvolution_solutions.ipynb
        pytest --nbval-lax -v code/deterministic_tractography/solutions/deterministic_tractography_solutions.ipynb
        pytest --nbval-lax -v code/probabilistic_tractography/probabilistic_tractography.ipynb
